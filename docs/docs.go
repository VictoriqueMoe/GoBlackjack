// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/deal": {
            "get": {
                "description": "Start a new game or deal for an existing one.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "start game",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/api/v1/hit": {
            "get": {
                "description": "Draw a new card from the dealer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "hit move",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "models.PlayStatus": {
            "type": "string",
            "enum": [
                "Dealer Bust",
                "Player Wins",
                "Dealer Wins",
                "Draw",
                "Playing",
                "Bust"
            ],
            "x-enum-varnames": [
                "DealerBust",
                "PlayerWins",
                "DealerWins",
                "Draw",
                "Playing",
                "Bust"
            ]
        },
        "models.ResponseMsg": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dealerCards": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dealerValue": {
                    "type": "integer"
                },
                "device": {
                    "type": "string"
                },
                "handValue": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.PlayStatus"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
